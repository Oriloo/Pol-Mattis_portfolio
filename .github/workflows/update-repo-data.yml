name: Update Repository Data

on:
  schedule:
    - cron: '0 0 * * *'  # Exécution tous les jours à 0h00 UTC
  workflow_dispatch:  # Permet de déclencher manuellement le workflow

permissions:
  contents: write  # Donne au PAT les permissions d'écriture
  issues: read     # Donne accès aux issues du dépôt (si besoin)

jobs:
  update-repo-data:
    runs-on: ubuntu-latest
    steps:
      # Étape 1: Cloner le dépôt
      - name: Checkout repository
        uses: actions/checkout@v3

      # Étape 2: Vérifier les permissions du répertoire de travail
      - name: Vérifier les permissions du répertoire de travail
        run: ls -ld $(pwd)

      # Étape 3: Récupérer les données et écrire dans /tmp/repos.json
      - name: Fetch repository data dans /tmp
        env:
          GITHUB_TOKEN: ${{ secrets.PAT_GITHUB }}
        run: |
          set -o pipefail
          curl -H "Authorization: token $GITHUB_TOKEN" \
            https://api.github.com/user/repos?per_page=100&type=public > /tmp/repos.json
          ls -l /tmp/repos.json  # Vérifier que le fichier est bien créé
          cat /tmp/repos.json    # Afficher le contenu

      # Étape 4: Upload repos.json as an artifact
      - name: Upload repos.json as an artifact
        uses: actions/upload-artifact@v3
        with:
          name: repos-data
          path: /tmp/repos.json

      # Étape 5: Download repos.json artifact
      - name: Download repos.json artifact
        uses: actions/download-artifact@v3
        with:
          name: repos-data
          path: $GITHUB_WORKSPACE

      # Étape 6: Commit et push des données
      - name: Commit repository data
        run: |
          git config --global user.email "you@example.com"
          git config --global user.name "GitHub Action Bot"
          git checkout test-workflows  # S'assurer que tu es sur la bonne branche
          git add repos.json
          git commit -m "Mise à jour des données des dépôts"
          git push origin test-workflows
