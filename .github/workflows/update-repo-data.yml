name: Update Repository Data

on:
  schedule:
    - cron: '0 0 * * *'
  workflow_dispatch:

jobs:
  update-repo-data:
    runs-on: ubuntu-latest

    steps:
    - name: Checkout repository
      uses: actions/checkout@v3

    - name: Set up Python
      uses: actions/setup-python@v4
      with:
        python-version: '3.x'

    - name: Install dependencies
      run: |
        python -m pip install --upgrade pip
        pip install requests

    - name: Get repository data
      env:
        GITHUB_TOKEN: ${{ secrets.PAT_GITHUB }}
      run: |
        import requests
        import json

        token = '${{ secrets.PAT_GITHUB }}'
        headers = {'Authorization': f'token {token}'}

        repos = []
        page = 1

        while True:
            response = requests.get(f'https://api.github.com/user/repos?per_page=100&page={page}', headers=headers)
            if response.status_code != 200:
                raise Exception(f'Error fetching repos: {response.status_code} {response.text}')
            data = response.json()
            if not data:
                break

            for repo in data:
                repos.append({
                    'id': repo['id'],
                    'name': repo['name'],
                    'description': repo['description'],
                    'stars': repo['stargazers_count'],
                    'forks': repo['forks_count'],
                    'watchers': repo['watchers_count']
                })

            page += 1

        with open('donnees/repos.json', 'w') as f:
            json.dump(repos, f, indent=2)

    - name: Commit and push changes
      run: |
        git config --global user.name 'github-actions[bot]'
        git config --global user.email 'github-actions[bot]@users.noreply.github.com'
        git add donnees/repos.json
        git commit -m 'Update repository data'
        git push origin test-workflows
