name: Update Repository Data

# Ce workflow s'exécute à une heure régulière et peut aussi être déclenché manuellement
on:
  schedule:
    - cron: '50 19 * * *' # Exécution tous les jours à 20h42 heure de Paris en été
  workflow_dispatch: # Permet de déclencher manuellement le workflow

jobs:
  update-repo-data:
    runs-on: ubuntu-latest
    steps:
      - name: Checkout repository
        uses: actions/checkout@v3
        with:
          node-version: '20' # Forcer l'utilisation de Node.js 20

    steps:
      # Étape 1: Cloner le dépôt
      - name: Checkout repository
        uses: actions/checkout@v3

      # Étape 2: Récupérer la liste de tous les dépôts de l'utilisateur
      - name: Fetch repository data
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }} # Utilise le token GitHub Actions pour authentifier l'API
        run: |
          # Obtenir les informations de tous les dépôts publics et privés
          curl -H "Authorization: token $GITHUB_TOKEN" \
            https://api.github.com/user/repos?per_page=100&type=public > repos.json

      # Étape 3: Vérifier si le fichier JSON est bien généré
      - name: Vérifier les fichiers générés
        run: ls -alh

      # Étape 4: Ajouter le fichier JSON au dépôt et le committer sur la branche 'test-workflow'
      - name: Commit repository data
        run: |
          git config --global user.email "you@example.com"
          git config --global user.name "GitHub Action Bot"
          git add repos.json
          git commit -m "Mise à jour des données des dépôts"
          git push origin test-workflow
