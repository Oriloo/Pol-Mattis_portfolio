name: Update Repo Data

on:
  schedule:
    - cron: "0 0 * * *"
  workflow_dispatch:

jobs:
  update-repo-data:
    runs-on: ubuntu-latest

    steps:
    - name: Checkout repository
      uses: actions/checkout@v3

    - name: Set up Python
      uses: actions/setup-python@v4
      with:
        python-version: '3.x'

    - name: Install dependencies
      run: |
        python -m pip install --upgrade pip
        pip install requests

    - name: Fetch repository information
      env:
        GITHUB_TOKEN: ${{ secrets.PAT_GITHUB }}
      run: |
        import requests
        import json
        import os

        token = os.getenv('GITHUB_TOKEN')
        headers = {'Authorization': f'token {token}'}
        repos_url = 'https://api.github.com/user/repos?per_page=100&type=public'
        response = requests.get(repos_url, headers=headers)

        if response.status_code == 200:
            repos = response.json()
            repos_data = []
            for repo in repos:
                repos_data.append({
                    'id': repo['id'],
                    'name': repo['name'],
                    'description': repo['description'],
                    'stars': repo['stargazers_count'],
                    'forks': repo['forks_count'],
                    'watchers': repo['watchers_count']
                })

            with open('donnees/repos.json', 'w') as f:
                json.dump(repos_data, f, indent=2)
        else:
            raise Exception(f'Failed to fetch repositories: {response.status_code} {response.text}')

    - name: Commit and push changes
      run: |
        git config --global user.name 'github-actions[bot]'
        git config --global user.email 'github-actions[bot]@users.noreply.github.com'
        git add donnees/repos.json
        git commit -m 'Update repository data'
        git push origin test-workflows