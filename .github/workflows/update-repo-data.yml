name: Update Repository Data

on:
  schedule:
    - cron: '50 19 * * *'  # Exécution tous les jours à 20h50 heure de Paris
  workflow_dispatch:  # Permet de déclencher manuellement le workflow

permissions:
  contents: write  # Donne au PAT les permissions d'écriture
  issues: read     # Donne accès aux issues du dépôt (si besoin)

jobs:
  update-repo-data:
    runs-on: ubuntu-latest
    steps:
      # Étape 1: Cloner le dépôt
      - name: Checkout repository
        uses: actions/checkout@v3

      # Étape 2: Vérifier les permissions du répertoire de travail
      - name: Vérifier les permissions du répertoire de travail
        run: ls -ld $(pwd)

      # Étape 3: Récupérer les données et écrire dans repos.json avec redirection directe
      - name: Fetch repository data
        env:
          GITHUB_TOKEN: ${{ secrets.PAT_GITHUB }}
        run: |
          curl -H "Authorization: token $GITHUB_TOKEN" \
            https://api.github.com/user/repos?per_page=100&type=public > repos.json
          sleep 2  # Pause pour s'assurer que tout est bien écrit
          ls -l repos.json  # Vérifier que le fichier est bien créé
          cat repos.json    # Afficher le contenu

      # Étape 4: Ajouter le fichier JSON au dépôt et le committer sur la branche 'test-workflows'
      - name: Commit repository data
        run: |
          git config --global user.email "you@example.com"
          git config --global user.name "GitHub Action Bot"
          git add repos.json
          git commit --allow-empty -m "Mise à jour des données des dépôts"
          git push origin test-workflows
